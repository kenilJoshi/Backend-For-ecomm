// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model user_profile {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  email     String    @db.VarChar(255) @unique
  password  String
  forgot_password_token String @default("")
  forgot_password_expiry DateTime  @default(now()) @db.Timestamp(6)
  role String @default("user")
  profile   profile?
  orders     orders[]
  wishlist   wishlist[]
  createdAt DateTime  @default(now()) @db.Timestamp(6)
}

model wishlist {
  id        Int       @id @default(autoincrement())
  user_id   Int
  user      user_profile    @relation(fields: [user_id], references: [id])
  product_id Int
  product     product    @relation(fields: [product_id], references: [id])
}

model profile {
  id        Int       @id @default(autoincrement())
  picture_id        String
  secure_url String
   user      user_profile      @relation(fields: [user_id], references: [id])
  user_id    Int      @unique
}

model category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  product[]
}

model product {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  price       Int
  quantity    Int
  image       String
  picture_id  String
  createdAt   DateTime  @default(now())
  category    category @relation(fields: [category_id], references: [id])
  category_id  Int      @default(3)
   cartItem cartitem[]
   wishlist   wishlist[]
}

model cartitem {
  id          Int       @id @default(autoincrement())
  quantity    Int
  price       Int
  product     product    @relation(fields: [product_id], references: [id])
  product_id  Int 
  order        orders       @relation(fields: [order_id], references: [id])
  order_id     Int
}

model orders {
  id          Int       @id @default(autoincrement())
  user        user_profile   @relation(fields: [user_id], references: [id])
  user_id     Int
  status      String         @default("Pending")
  total_price Int            @default(0)
  total_quantity  Int        @default(0)
  address     String         @default("")
  cart_item   cartitem[]
  createdAt DateTime  @default(now()) @db.Timestamp(6)
}